{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet StudentDashboardComponent = class StudentDashboardComponent {\n  constructor(apiservice, router, authservice) {\n    this.apiservice = apiservice;\n    this.router = router;\n    this.authservice = authservice;\n    this.showDailyDiarySection = false;\n    this.hoursData = ['hour1', 'hour2', 'hour3', 'hour4', 'hour5', 'hour6', 'hour7', 'hour8', 'hour9', 'hour10', 'hour11', 'hour12', 'hour13'];\n    this.minutesData = ['minutes1', 'minutes2', 'minutes3', 'minutes4', 'minutes5', 'minutes6', 'minutes7', 'minutes8', 'minutes9', 'minutes10', 'minutes11', 'minutes12', 'minutes13'];\n  }\n  ngOnInit() {\n    this.getAllStudents();\n    this.email = this.authservice.getEmail(); //display emailid of vt to student dashboard\n  }\n\n  getAllStudents() {\n    this.apiservice.getStudents().subscribe(res => {\n      this.studentData = res.studentDetails;\n      console.log(res.studentDetails);\n    });\n  }\n  selectStudent(id) {\n    this.apiservice.getStudentById(id).subscribe(res => {\n      this.selectedStudent = res.studentDetails;\n      //console.log(res.studentDetails);\n      console.log(this.selectedStudent);\n    });\n  }\n  clearSelectedStudent() {\n    this.selectedStudent = null;\n  }\n  go_to_login() {\n    this.router.navigate(['/vt_login']);\n  }\n  //select json file and upload\n  onFileSelected(event) {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        //It checks if e and e.target are not null or undefined before attempting to access e.target. \n        //The result is cast to FileReader type, and then .result is accessed and cast as a string.\n        const fileContent = e.target?.result;\n        this.parseJson(fileContent);\n        this.showDailyDiarySection = true;\n      };\n      reader.readAsText(file);\n    }\n  }\n  parseJson(jsonString) {\n    try {\n      const jsonData = JSON.parse(jsonString);\n      this.studentDataFromJson = jsonData;\n      console.log(\"stu_data from json\", this.studentDataFromJson);\n      // this.hoursData = Object.values(this.studentDataFromJson.fieldInfo.hour);\n    } catch (error) {\n      console.log(\"Error parsing JSON:\", error);\n    }\n  }\n};\nStudentDashboardComponent = __decorate([Component({\n  selector: 'app-student-dashboard',\n  templateUrl: './student-dashboard.component.html',\n  styleUrls: ['./student-dashboard.component.css']\n})], StudentDashboardComponent);\nexport { StudentDashboardComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAUlC,IAAMC,yBAAyB,GAA/B,MAAMA,yBAAyB;EAUpCC,YAAoBC,UAAsB,EAChCC,MAAc,EACdC,WAAgC;IAFtB,eAAU,GAAVF,UAAU;IACpB,WAAM,GAANC,MAAM;IACN,gBAAW,GAAXC,WAAW;IAPrB,0BAAqB,GAAY,KAAK;IACtC,cAAS,GAAa,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;IAC/I,gBAAW,GAAa,CAAC,UAAU,EAAC,UAAU,EAAC,UAAU,EAAC,UAAU,EAAC,UAAU,EAAC,UAAU,EAAC,UAAU,EAAC,UAAU,EAAC,UAAU,EAAC,WAAW,EAAC,WAAW,EAAC,WAAW,EAAC,WAAW,CAAC;EAK9H;EAE9CC,QAAQ;IACN,IAAI,CAACC,cAAc,EAAE;IACrB,IAAI,CAACC,KAAK,GAAG,IAAI,CAACH,WAAW,CAACI,QAAQ,EAAE,CAAC;EAC3C;;EAEAF,cAAc;IACZ,IAAI,CAACJ,UAAU,CAACO,WAAW,EAAE,CAACC,SAAS,CAAEC,GAAQ,IAAI;MAEnD,IAAI,CAACC,WAAW,GAAGD,GAAG,CAACE,cAAc;MACrCC,OAAO,CAACC,GAAG,CAACJ,GAAG,CAACE,cAAc,CAAC;IACjC,CAAC,CAAC;EACJ;EACAG,aAAa,CAACC,EAAU;IACtB,IAAI,CAACf,UAAU,CAACgB,cAAc,CAACD,EAAE,CAAC,CAACP,SAAS,CAAEC,GAAG,IAAI;MACnD,IAAI,CAACQ,eAAe,GAAGR,GAAG,CAACE,cAAc;MACzC;MACAC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACI,eAAe,CAAC;IACnC,CAAC,CAAC;EACJ;EACAC,oBAAoB;IAClB,IAAI,CAACD,eAAe,GAAG,IAAI;EAC7B;EACAE,WAAW;IACT,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;EACrC;EAEA;EACAC,cAAc,CAACC,KAAU;IACvB,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,EAAE;MACR,MAAMG,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAI;QACpB;QACA;QACA,MAAMC,WAAW,GAAID,CAAC,CAACL,MAAqB,EAAEO,MAAgB;QAC9D,IAAI,CAACC,SAAS,CAACF,WAAW,CAAC;QAC3B,IAAI,CAACG,qBAAqB,GAAG,IAAI;MACnC,CAAC;MACDP,MAAM,CAACQ,UAAU,CAACX,IAAI,CAAC;;EAE3B;EACQS,SAAS,CAACG,UAAkB;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACH,UAAU,CAAC;MACvC,IAAI,CAACI,mBAAmB,GAAGH,QAAQ;MACnCxB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAAC0B,mBAAmB,CAAC;MAC3D;KACD,CAAC,OAAOC,KAAK,EAAE;MACd5B,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE2B,KAAK,CAAC;;EAE7C;CACD;AAjEY1C,yBAAyB,eALrCD,SAAS,CAAC;EACT4C,QAAQ,EAAE,uBAAuB;EACjCC,WAAW,EAAE,oCAAoC;EACjDC,SAAS,EAAE,CAAC,mCAAmC;CAChD,CAAC,GACW7C,yBAAyB,CAiErC;SAjEYA,yBAAyB","names":["Component","StudentDashboardComponent","constructor","apiservice","router","authservice","ngOnInit","getAllStudents","email","getEmail","getStudents","subscribe","res","studentData","studentDetails","console","log","selectStudent","id","getStudentById","selectedStudent","clearSelectedStudent","go_to_login","navigate","onFileSelected","event","file","target","files","reader","FileReader","onload","e","fileContent","result","parseJson","showDailyDiarySection","readAsText","jsonString","jsonData","JSON","parse","studentDataFromJson","error","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\project angular\\Student_Task_Tracker\\ClientApp\\src\\app\\VT_Section\\student-dashboard\\student-dashboard.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/shared/api.service';\nimport { AuthserviceService } from 'src/app/shared/authservice.service';\n\n@Component({\n  selector: 'app-student-dashboard',\n  templateUrl: './student-dashboard.component.html',\n  styleUrls: ['./student-dashboard.component.css']\n})\nexport class StudentDashboardComponent {\n  studentData !: any;\n  selectedStudent: any;\n  studentDataFromJson: any;\n  email!: string; //display emailid of vt to student dashboard\n  showDailyDiarySection: boolean = false;\n  hoursData: string[] = ['hour1', 'hour2', 'hour3', 'hour4', 'hour5', 'hour6', 'hour7', 'hour8', 'hour9', 'hour10', 'hour11', 'hour12', 'hour13'];\n  minutesData: string[] = ['minutes1','minutes2','minutes3','minutes4','minutes5','minutes6','minutes7','minutes8','minutes9','minutes10','minutes11','minutes12','minutes13']\n\n\n  constructor(private apiservice: ApiService,\n    private router: Router,\n    private authservice : AuthserviceService) { }\n\n  ngOnInit(): void {\n    this.getAllStudents();\n    this.email = this.authservice.getEmail();//display emailid of vt to student dashboard\n  }\n\n  getAllStudents() {\n    this.apiservice.getStudents().subscribe((res: any) => {\n\n      this.studentData = res.studentDetails;\n      console.log(res.studentDetails);\n    })\n  }\n  selectStudent(id: number) {\n    this.apiservice.getStudentById(id).subscribe((res) => {\n      this.selectedStudent = res.studentDetails;\n      //console.log(res.studentDetails);\n      console.log(this.selectedStudent);\n    })\n  }\n  clearSelectedStudent() {\n    this.selectedStudent = null;\n  }\n  go_to_login() {\n    this.router.navigate(['/vt_login'])\n  }\n\n  //select json file and upload\n  onFileSelected(event: any): void {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        //It checks if e and e.target are not null or undefined before attempting to access e.target. \n        //The result is cast to FileReader type, and then .result is accessed and cast as a string.\n        const fileContent = (e.target as FileReader)?.result as string;\n        this.parseJson(fileContent);\n        this.showDailyDiarySection = true; \n      };\n      reader.readAsText(file);\n    }\n  }\n  private parseJson(jsonString: string): void {\n    try {\n      const jsonData = JSON.parse(jsonString);\n      this.studentDataFromJson = jsonData;\n      console.log(\"stu_data from json\", this.studentDataFromJson);\n      // this.hoursData = Object.values(this.studentDataFromJson.fieldInfo.hour);\n    } catch (error) {\n      console.log(\"Error parsing JSON:\", error);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}