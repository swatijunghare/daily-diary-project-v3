{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/api.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/shared/authservice.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../nav-menu/nav-menu.component\";\nfunction StudentDashboardComponent_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\")(4, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function StudentDashboardComponent_tr_23_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const data_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.selectStudent(data_r3.stud_Id));\n    });\n    i0.ɵɵtext(5, \"Select Student\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const data_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r3.fullname);\n  }\n}\nfunction StudentDashboardComponent_table_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table\", 8)(1, \"thead\")(2, \"tr\")(3, \"th\", 9);\n    i0.ɵɵtext(4, \"Full Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\", 9);\n    i0.ɵɵtext(6, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\", 9);\n    i0.ɵɵtext(8, \"Mobile\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\", 9);\n    i0.ɵɵtext(10, \"Academic Year\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \"Actions\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"tbody\")(14, \"tr\")(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\");\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"td\");\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"td\")(24, \"input\", 14, 15);\n    i0.ɵɵlistener(\"change\", function StudentDashboardComponent_table_24_Template_input_change_24_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onFileSelected($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function StudentDashboardComponent_table_24_Template_button_click_26_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const _r6 = i0.ɵɵreference(25);\n      return i0.ɵɵresetView(_r6.click());\n    });\n    i0.ɵɵtext(27, \"Fill Daily Diary\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(16);\n    i0.ɵɵtextInterpolate(ctx_r1.selectedStudent.fullname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.selectedStudent.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.selectedStudent.mobile);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.selectedStudent.academicyear);\n  }\n}\nfunction StudentDashboardComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 3)(3, \"h4\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"h6\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"titlecase\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(8, \"table\", 17)(9, \"tr\")(10, \"th\");\n    i0.ɵɵtext(11, \"Student ID :\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"th\", 9);\n    i0.ɵɵtext(15, \"Academic Year :\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"tr\")(19, \"th\", 9);\n    i0.ɵɵtext(20, \"Month :\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"td\");\n    i0.ɵɵtext(22, \"-\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"th\", 9);\n    i0.ɵɵtext(24, \"Year :\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"td\");\n    i0.ɵɵtext(26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"th\", 9);\n    i0.ɵɵtext(28, \"Job Role :\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"td\");\n    i0.ɵɵtext(30);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(31, \"tr\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r2.studentDataFromJson.targetName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Name: \", i0.ɵɵpipeBind1(7, 6, ctx_r2.studentDataFromJson.fieldInfo.name), \"\");\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(ctx_r2.studentDataFromJson.fieldInfo.StudentID);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r2.studentDataFromJson.fieldInfo.AcademicYear);\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate(ctx_r2.studentDataFromJson.fieldInfo.Year);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r2.studentDataFromJson.fieldInfo.JobRole);\n  }\n}\nexport class StudentDashboardComponent {\n  constructor(apiservice, router, authservice) {\n    this.apiservice = apiservice;\n    this.router = router;\n    this.authservice = authservice;\n    this.showDailyDiarySection = false;\n  }\n  ngOnInit() {\n    this.getAllStudents();\n    this.email = this.authservice.getEmail(); //display emailid of vt to student dashboard\n  }\n\n  getAllStudents() {\n    this.apiservice.getStudents().subscribe(res => {\n      this.studentData = res.studentDetails;\n      console.log(res.studentDetails);\n    });\n  }\n  selectStudent(id) {\n    this.apiservice.getStudentById(id).subscribe(res => {\n      this.selectedStudent = res.studentDetails;\n      //console.log(res.studentDetails);\n      console.log(this.selectedStudent);\n    });\n  }\n  clearSelectedStudent() {\n    this.selectedStudent = null;\n  }\n  go_to_login() {\n    this.router.navigate(['/vt_login']);\n  }\n  //select json file and upload\n  onFileSelected(event) {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        //It checks if e and e.target are not null or undefined before attempting to access e.target. \n        //The result is cast to FileReader type, and then .result is accessed and cast as a string.\n        const fileContent = e.target?.result;\n        this.parseJson(fileContent);\n        this.showDailyDiarySection = true;\n      };\n      reader.readAsText(file);\n    }\n  }\n  parseJson(jsonString) {\n    try {\n      const jsonData = JSON.parse(jsonString);\n      this.studentDataFromJson = jsonData;\n      console.log(\"stu_data from json\", this.studentDataFromJson);\n    } catch (error) {\n      console.log(\"Error parsing JSON:\", error);\n    }\n  }\n}\nStudentDashboardComponent.ɵfac = function StudentDashboardComponent_Factory(t) {\n  return new (t || StudentDashboardComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthserviceService));\n};\nStudentDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: StudentDashboardComponent,\n  selectors: [[\"app-student-dashboard\"]],\n  decls: 26,\n  vars: 4,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col-6\"], [1, \"col\"], [1, \"d-flex\", \"justify-content-end\", \"mt-3\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"col-4\", \"text-left\"], [1, \"col-8\", \"text-right\"], [1, \"table\", \"mt-3\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"table mt-3\", 4, \"ngIf\"], [\"class\", \"container\", 4, \"ngIf\"], [1, \"btn\", \"btn-info\", 3, \"click\"], [\"type\", \"file\", 2, \"display\", \"none\", 3, \"change\"], [\"fileInput\", \"\"], [3, \"click\"], [1, \"table\", \"table-bordered\"]],\n  template: function StudentDashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"app-nav-menu\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 1)(6, \"div\", 3)(7, \"div\", 4)(8, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function StudentDashboardComponent_Template_button_click_8_listener() {\n        return ctx.go_to_login();\n      });\n      i0.ɵɵtext(9, \"Login\");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(10, \"div\", 1)(11, \"div\", 6)(12, \"h4\");\n      i0.ɵɵtext(13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 7)(15, \"table\", 8)(16, \"thead\")(17, \"tr\")(18, \"th\", 9);\n      i0.ɵɵtext(19, \"Full Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"th\", 9);\n      i0.ɵɵtext(21, \"Action\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(22, \"tbody\");\n      i0.ɵɵtemplate(23, StudentDashboardComponent_tr_23_Template, 6, 1, \"tr\", 10);\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵtemplate(24, StudentDashboardComponent_table_24_Template, 28, 4, \"table\", 11);\n      i0.ɵɵtemplate(25, StudentDashboardComponent_div_25_Template, 32, 8, \"div\", 12);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(13);\n      i0.ɵɵtextInterpolate1(\" \", ctx.email, \"\");\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.studentData);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedStudent);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showDailyDiarySection);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i5.NavMenuComponent, i4.TitleCasePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","StudentDashboardComponent","constructor","apiservice","router","authservice","ngOnInit","getAllStudents","email","getEmail","getStudents","subscribe","res","studentData","studentDetails","console","log","selectStudent","id","getStudentById","selectedStudent","clearSelectedStudent","go_to_login","navigate","onFileSelected","event","file","target","files","reader","FileReader","onload","e","fileContent","result","parseJson","showDailyDiarySection","readAsText","jsonString","jsonData","JSON","parse","studentDataFromJson","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\project angular\\Student_Task_Tracker\\ClientApp\\src\\app\\VT_Section\\student-dashboard\\student-dashboard.component.html","D:\\project angular\\Student_Task_Tracker\\ClientApp\\src\\app\\VT_Section\\student-dashboard\\student-dashboard.component.ts"],"sourcesContent":["<div class=\"container\">\n  <!--1st row-->\n  <div class=\"row\">\n    <div class=\"col-6\"><app-nav-menu></app-nav-menu></div>\n    <div class=\"col-6\">\n      <div class=\"row\">\n        <div class=\"col\">\n          <div class=\"d-flex justify-content-end mt-3\">\n            <button (click)=\"go_to_login()\" class=\"btn btn-success\">Login</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!--2nd row-->\n  <div class=\"row\">\n    <div class=\"col-4 text-left\">\n      <h4> {{email}}</h4>\n    </div>\n    <div class=\"col-8 text-right\">\n      <table class=\"table mt-3\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Full Name</th>\n            <th scope=\"col\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let data of studentData\">\n            <td>{{data.fullname}}</td>\n            <td><button class=\"btn btn-info\" (click)=\"selectStudent(data.stud_Id)\">Select Student</button></td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n\n\n<!------show data of selected student (id) in table--------->\n<table class=\"table mt-3\" *ngIf=\"selectedStudent\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Full Name</th>\n      <th scope=\"col\">Email</th>\n      <th scope=\"col\">Mobile</th>\n      <th scope=\"col\">Academic Year</th>\n      <th>Actions</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>{{ selectedStudent.fullname }}</td>\n      <td>{{ selectedStudent.email }}</td>\n      <td>{{ selectedStudent.mobile }}</td>\n      <td>{{ selectedStudent.academicyear }}</td>\n      <td>\n        <input type=\"file\" #fileInput (change)=\"onFileSelected($event)\" style=\"display: none;\">\n        <button (click)=\"fileInput.click()\">Fill Daily Diary</button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<!--json data from daily diary scanned form-->\n <div class=\"container\" *ngIf=\"showDailyDiarySection\">\n  <div class=\"row\" >\n    <div class=\"col\">\n      <h4>{{studentDataFromJson.targetName}}</h4>\n      <h6>Name: {{studentDataFromJson.fieldInfo.name | titlecase}}</h6>\n    </div>\n  </div>\n\n  <table class=\"table table-bordered\">\n      <tr>\n        <th>Student ID :</th><td>{{studentDataFromJson.fieldInfo.StudentID}}</td>\n        <th scope=\"col\">Academic Year :</th><td>{{studentDataFromJson.fieldInfo.AcademicYear}}</td>\n      </tr>\n      <tr>\n        <th scope=\"col\">Month :</th><td>-</td>\n        <th scope=\"col\">Year :</th><td>{{studentDataFromJson.fieldInfo.Year}}</td> \n        <th scope=\"col\">Job Role :</th><td>{{studentDataFromJson.fieldInfo.JobRole}}</td>\n      </tr>\n      <tr></tr>\n  </table>  \n</div>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/shared/api.service';\nimport { AuthserviceService } from 'src/app/shared/authservice.service';\n\n@Component({\n  selector: 'app-student-dashboard',\n  templateUrl: './student-dashboard.component.html',\n  styleUrls: ['./student-dashboard.component.css']\n})\nexport class StudentDashboardComponent {\n  studentData !: any;\n  selectedStudent: any;\n  studentDataFromJson: any;\n  email!: string; //display emailid of vt to student dashboard\n  showDailyDiarySection: boolean = false;\n\n  constructor(private apiservice: ApiService,\n    private router: Router,\n    private authservice : AuthserviceService) { }\n\n  ngOnInit(): void {\n    this.getAllStudents();\n    this.email = this.authservice.getEmail();//display emailid of vt to student dashboard\n  }\n\n  getAllStudents() {\n    this.apiservice.getStudents().subscribe((res: any) => {\n\n      this.studentData = res.studentDetails;\n      console.log(res.studentDetails);\n    })\n  }\n  selectStudent(id: number) {\n    this.apiservice.getStudentById(id).subscribe((res) => {\n      this.selectedStudent = res.studentDetails;\n      //console.log(res.studentDetails);\n      console.log(this.selectedStudent);\n    })\n  }\n  clearSelectedStudent() {\n    this.selectedStudent = null;\n  }\n  go_to_login() {\n    this.router.navigate(['/vt_login'])\n  }\n\n  //select json file and upload\n  onFileSelected(event: any): void {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        //It checks if e and e.target are not null or undefined before attempting to access e.target. \n        //The result is cast to FileReader type, and then .result is accessed and cast as a string.\n        const fileContent = (e.target as FileReader)?.result as string;\n        this.parseJson(fileContent);\n        this.showDailyDiarySection = true; \n      };\n      reader.readAsText(file);\n    }\n  }\n  private parseJson(jsonString: string): void {\n    try {\n      const jsonData = JSON.parse(jsonString);\n      this.studentDataFromJson = jsonData;\n      console.log(\"stu_data from json\", this.studentDataFromJson);\n    } catch (error) {\n      console.log(\"Error parsing JSON:\", error);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}