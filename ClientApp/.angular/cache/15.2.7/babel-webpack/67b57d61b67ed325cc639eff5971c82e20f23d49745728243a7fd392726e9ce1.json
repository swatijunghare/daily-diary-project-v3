{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/api.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/shared/authservice.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../nav-menu/nav-menu.component\";\nfunction StudentDashboardComponent_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\")(4, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function StudentDashboardComponent_tr_23_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const data_r5 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.selectStudent(data_r5.stud_Id));\n    });\n    i0.ɵɵtext(5, \"Select Student\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const data_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r5.fullname);\n  }\n}\nfunction StudentDashboardComponent_table_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table\", 8)(1, \"thead\")(2, \"tr\")(3, \"th\", 9);\n    i0.ɵɵtext(4, \"Full Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\", 9);\n    i0.ɵɵtext(6, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\", 9);\n    i0.ɵɵtext(8, \"Mobile\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\", 9);\n    i0.ɵɵtext(10, \"Academic Year\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \"Actions\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"tbody\")(14, \"tr\")(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\");\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"td\");\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"td\")(24, \"input\", 16, 17);\n    i0.ɵɵlistener(\"change\", function StudentDashboardComponent_table_24_Template_input_change_24_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onFileSelected($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function StudentDashboardComponent_table_24_Template_button_click_26_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const _r8 = i0.ɵɵreference(25);\n      return i0.ɵɵresetView(_r8.click());\n    });\n    i0.ɵɵtext(27, \"Fill Daily Diary\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(16);\n    i0.ɵɵtextInterpolate(ctx_r1.selectedStudent.fullname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.selectedStudent.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.selectedStudent.mobile);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.selectedStudent.academicyear);\n  }\n}\nfunction StudentDashboardComponent_div_25_td_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const MonthDay_r18 = ctx.$implicit;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r12.studentDataFromJson == null ? null : ctx_r12.studentDataFromJson.fieldInfo[MonthDay_r18]);\n  }\n}\nfunction StudentDashboardComponent_div_25_td_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const hour_r19 = ctx.$implicit;\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r13.studentDataFromJson == null ? null : ctx_r13.studentDataFromJson.fieldInfo[hour_r19]);\n  }\n}\nfunction StudentDashboardComponent_div_25_td_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const minute_r20 = ctx.$implicit;\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r14.studentDataFromJson == null ? null : ctx_r14.studentDataFromJson.fieldInfo[minute_r20]);\n  }\n}\nfunction StudentDashboardComponent_div_25_td_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r21 = ctx.$implicit;\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r15.studentDataFromJson == null ? null : ctx_r15.studentDataFromJson.fieldInfo[tick_r21]);\n  }\n}\nfunction StudentDashboardComponent_div_25_td_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r22 = ctx.$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r16.studentDataFromJson == null ? null : ctx_r16.studentDataFromJson.fieldInfo[tick_r22]);\n  }\n}\nfunction StudentDashboardComponent_div_25_td_60_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r23 = ctx.$implicit;\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r17.studentDataFromJson == null ? null : ctx_r17.studentDataFromJson.fieldInfo[tick_r23]);\n  }\n}\nfunction StudentDashboardComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"div\", 1)(2, \"div\", 3)(3, \"h4\", 20);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(5, \"div\", 21)(6, \"h6\");\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"titlecase\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 1)(10, \"div\", 22);\n    i0.ɵɵtext(11, \"Student ID :\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 23);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"div\", 22)(15, \"div\", 3);\n    i0.ɵɵelementStart(16, \"div\", 24);\n    i0.ɵɵtext(17, \"Academic Year :\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 25);\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(20, \"div\", 1)(21, \"div\", 22);\n    i0.ɵɵtext(22, \"Month :\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"div\", 25);\n    i0.ɵɵtext(24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"div\", 22);\n    i0.ɵɵtext(26, \"Year :\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"div\", 26);\n    i0.ɵɵtext(28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"div\", 22);\n    i0.ɵɵtext(30, \"Job Role :\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"div\", 27);\n    i0.ɵɵtext(32);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(33, \"br\");\n    i0.ɵɵelementStart(34, \"table\", 28)(35, \"tr\")(36, \"td\", 29);\n    i0.ɵɵtext(37, \"Task\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"td\");\n    i0.ɵɵtext(39, \"Day Of Month\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(40, StudentDashboardComponent_div_25_td_40_Template, 2, 1, \"td\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(41, \"tr\")(42, \"td\");\n    i0.ɵɵtext(43, \"Hours\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(44, StudentDashboardComponent_div_25_td_44_Template, 2, 1, \"td\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(45, \"tr\")(46, \"td\");\n    i0.ɵɵtext(47, \"Minutes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(48, StudentDashboardComponent_div_25_td_48_Template, 2, 1, \"td\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(49, \"tr\")(50, \"td\", 30);\n    i0.ɵɵtext(51);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(52, StudentDashboardComponent_div_25_td_52_Template, 2, 1, \"td\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(53, \"tr\")(54, \"td\", 30);\n    i0.ɵɵtext(55);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(56, StudentDashboardComponent_div_25_td_56_Template, 2, 1, \"td\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(57, \"tr\")(58, \"td\", 30);\n    i0.ɵɵtext(59);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(60, StudentDashboardComponent_div_25_td_60_Template, 2, 1, \"td\", 10);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r2.studentDataFromJson.targetName);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Name: \", i0.ɵɵpipeBind1(8, 16, ctx_r2.studentDataFromJson.fieldInfo.name), \"\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r2.studentDataFromJson.fieldInfo.StudentID);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r2.studentDataFromJson.fieldInfo.AcademicYear);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r2.studentDataFromJson.fieldInfo.Month);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r2.studentDataFromJson.fieldInfo.Year);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r2.studentDataFromJson.fieldInfo.JobRole);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.MonthDaysData);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.hoursData);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.minutesData);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r2.studentDataFromJson.fieldInfo.TaskName1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.Task1TickData);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r2.studentDataFromJson.fieldInfo.TaskName2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.Task1TickData);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r2.studentDataFromJson.fieldInfo.TaskName3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.Task1TickData);\n  }\n}\nfunction StudentDashboardComponent_button_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function StudentDashboardComponent_button_27_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.toggleSortedDataVisibility());\n    });\n    i0.ɵɵtext(1, \"Show Sorted Data\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction StudentDashboardComponent_div_28_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r27 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r27.TaskName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r27.Performed);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r27.Date);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r27.Hour);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r27.Minutes);\n  }\n}\nfunction StudentDashboardComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"table\")(2, \"thead\")(3, \"tr\")(4, \"th\");\n    i0.ɵɵtext(5, \"TaskName\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7, \"Performed\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11, \"Minutes\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(12, \"tbody\");\n    i0.ɵɵtemplate(13, StudentDashboardComponent_div_28_tr_13_Template, 11, 5, \"tr\", 10);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.sortedData);\n  }\n}\nexport class StudentDashboardComponent {\n  constructor(apiservice, router, authservice) {\n    this.apiservice = apiservice;\n    this.router = router;\n    this.authservice = authservice;\n    this.showSortedDataButton = false;\n    this.showDailyDiarySection = false;\n    this.sortedData = [];\n    this.MonthDaysData = ['MonthDay1', 'MonthDay2', 'MonthDay3', 'MonthDay4', 'MonthDay5', 'MonthDay6', 'MonthDay7', 'MonthDay8', 'MonthDay9', 'MonthDay10', 'MonthDay11', 'MonthDay12', 'MonthDay13'];\n    this.hoursData = ['hour1', 'hour2', 'hour3', 'hour4', 'hour5', 'hour6', 'hour7', 'hour8', 'hour9', 'hour10', 'hour11', 'hour12', 'hour13'];\n    this.minutesData = ['minutes1', 'minutes2', 'minutes3', 'minutes4', 'minutes5', 'minutes6', 'minutes7', 'minutes8', 'minutes9', 'minutes10', 'minutes11', 'minutes12', 'minutes13'];\n    this.Task1TickData = ['Task1Tick1', 'Task1Tick2', 'Task1Tick3', 'Task1Tick4', 'Task1Tick5', 'Task1Tick6', 'Task1Tick7', 'Task1Tick8', 'Task1Tick9', 'Task1Tick10', 'Task1Tick11', 'Task1Tick12', 'Task1Tick13'];\n  }\n  ngOnInit() {\n    this.getAllStudents();\n    this.email = this.authservice.getEmail(); //display emailid of vt to student dashboard\n    this.toggleSortedDataVisibility;\n  }\n  getAllStudents() {\n    this.apiservice.getStudents().subscribe(res => {\n      this.studentData = res.studentDetails;\n      console.log(res.studentDetails);\n    });\n  }\n  selectStudent(id) {\n    this.apiservice.getStudentById(id).subscribe(res => {\n      this.selectedStudent = res.studentDetails;\n      //console.log(res.studentDetails);\n      console.log(this.selectedStudent);\n    });\n  }\n  clearSelectedStudent() {\n    this.selectedStudent = null;\n  }\n  go_to_login() {\n    this.router.navigate(['/vt_login']);\n  }\n  //select json file and upload\n  onFileSelected(event) {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        //It checks if e and e.target are not null or undefined before attempting to access e.target. \n        //The result is cast to FileReader type, and then .result is accessed and cast as a string.\n        const fileContent = e.target?.result;\n        this.parseJson(fileContent);\n        this.logFilteredData(); // Log the filtered data before sending to the backend\n        // this.uploadDataToBackend();\n        this.showDailyDiarySection = true;\n      };\n      reader.readAsText(file);\n    }\n  }\n  parseJson(jsonString) {\n    try {\n      const jsonData = JSON.parse(jsonString);\n      this.studentDataFromJson = jsonData;\n      console.log(\"stu_data from json\", this.studentDataFromJson);\n      // this.hoursData = Object.values(this.studentDataFromJson.fieldInfo.hour);\n    } catch (error) {\n      console.log(\"Error parsing JSON:\", error);\n    }\n  }\n  //here new obj for filtered data from scanned file to send to backend\n  logFilteredData() {\n    if (this.studentDataFromJson) {\n      const tasks = ['Task1', 'Task2', 'Task3', 'Task4', 'Task5', 'Task6'];\n      const sortedData = [];\n      // Extract the 'Year' and 'Month' from the scanned file\n      const year = this.studentDataFromJson.fieldInfo['Year'];\n      const month = this.studentDataFromJson.fieldInfo['Month'];\n      tasks.forEach(task => {\n        const taskName = this.studentDataFromJson.fieldInfo[`TaskName${task.substring(4)}`];\n        // Skip if TaskName is empty\n        if (!taskName) {\n          return;\n        }\n        for (let i = 1; i <= 13; i++) {\n          const tickKey = `${task}Tick${i}`;\n          const monthDayKey = `MonthDay${i}`;\n          const hourKey = `hour${i}`;\n          const minuteKey = `minutes${i}`;\n          const performedValue = this.studentDataFromJson.fieldInfo[tickKey] === '1' ? 'Yes' : 'No';\n          // Only include tasks with tick value 1\n          if (performedValue === 'Yes') {\n            const monthDayValue = this.studentDataFromJson.fieldInfo[monthDayKey];\n            const hourValue = this.studentDataFromJson.fieldInfo[hourKey];\n            const minuteValue = this.studentDataFromJson.fieldInfo[minuteKey];\n            const minutesPresent = minuteValue !== ''; // Check if minutes are present\n            // Form the date string directly\n            const date = `${year}-${month}-${monthDayValue}`;\n            const taskObj = {\n              TaskName: taskName,\n              Performed: performedValue,\n              Date: date,\n              Hour: hourValue,\n              Minutes: minutesPresent ? minuteValue : '00' // Include only if minutes are present\n            };\n            // Check if the task is already in the sortedData array\n            const existingTask = sortedData.find(item => item.TaskName === taskName && item.Date === date);\n            if (!existingTask) {\n              sortedData.push(taskObj);\n            }\n          }\n        }\n      });\n      // Sort the array based on TaskName, Date\n      sortedData.sort((a, b) => {\n        const taskNameComparison = a.TaskName.localeCompare(b.TaskName);\n        return taskNameComparison === 0 ? a.Date.localeCompare(b.Date) : taskNameComparison;\n      });\n      console.log(\"sortedData =\", sortedData);\n      this.showSortedDataButton = true;\n    }\n  }\n  //show sorted data on button click\n  toggleSortedDataVisibility() {\n    this.ShowSortedData = !this.ShowSortedData;\n  }\n}\nStudentDashboardComponent.ɵfac = function StudentDashboardComponent_Factory(t) {\n  return new (t || StudentDashboardComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthserviceService));\n};\nStudentDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: StudentDashboardComponent,\n  selectors: [[\"app-student-dashboard\"]],\n  decls: 29,\n  vars: 6,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col-6\"], [1, \"col\"], [1, \"d-flex\", \"justify-content-end\", \"mt-3\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"col-4\", \"text-left\"], [1, \"col-8\", \"text-right\"], [1, \"table\", \"mt-3\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"table mt-3\", 4, \"ngIf\"], [\"class\", \"container border border-warning\", 4, \"ngIf\"], [3, \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"btn\", \"btn-info\", 3, \"click\"], [\"type\", \"file\", 2, \"display\", \"none\", 3, \"change\"], [\"fileInput\", \"\"], [3, \"click\"], [1, \"container\", \"border\", \"border-warning\"], [1, \"text-center\"], [1, \"row\", \"border-bottom\"], [1, \"col-1\"], [1, \"col-2\", \"border\", \"mt-1\", 2, \"text-align\", \"left\"], [1, \"col-2\"], [1, \"col-2\", \"border\", \"mt-1\"], [1, \"col-2\", \"border\"], [1, \"col-4\", \"border\", \"mt-1\"], [1, \"table\", \"table-bordered\"], [\"rowspan\", \"3\"], [\"colspan\", \"2\"]],\n  template: function StudentDashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"app-nav-menu\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 1)(6, \"div\", 3)(7, \"div\", 4)(8, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function StudentDashboardComponent_Template_button_click_8_listener() {\n        return ctx.go_to_login();\n      });\n      i0.ɵɵtext(9, \"Login\");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(10, \"div\", 1)(11, \"div\", 6)(12, \"h4\");\n      i0.ɵɵtext(13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 7)(15, \"table\", 8)(16, \"thead\")(17, \"tr\")(18, \"th\", 9);\n      i0.ɵɵtext(19, \"Full Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"th\", 9);\n      i0.ɵɵtext(21, \"Action\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(22, \"tbody\");\n      i0.ɵɵtemplate(23, StudentDashboardComponent_tr_23_Template, 6, 1, \"tr\", 10);\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵtemplate(24, StudentDashboardComponent_table_24_Template, 28, 4, \"table\", 11);\n      i0.ɵɵtemplate(25, StudentDashboardComponent_div_25_Template, 61, 18, \"div\", 12);\n      i0.ɵɵelement(26, \"hr\");\n      i0.ɵɵtemplate(27, StudentDashboardComponent_button_27_Template, 2, 0, \"button\", 13);\n      i0.ɵɵtemplate(28, StudentDashboardComponent_div_28_Template, 14, 1, \"div\", 14);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(13);\n      i0.ɵɵtextInterpolate1(\" \", ctx.email, \"\");\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.studentData);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedStudent);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showDailyDiarySection);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showSortedDataButton);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.ShowSortedData);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i5.NavMenuComponent, i4.TitleCasePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","StudentDashboardComponent","constructor","apiservice","router","authservice","ngOnInit","getAllStudents","email","getEmail","toggleSortedDataVisibility","getStudents","subscribe","res","studentData","studentDetails","console","log","selectStudent","id","getStudentById","selectedStudent","clearSelectedStudent","go_to_login","navigate","onFileSelected","event","file","target","files","reader","FileReader","onload","e","fileContent","result","parseJson","logFilteredData","showDailyDiarySection","readAsText","jsonString","jsonData","JSON","parse","studentDataFromJson","error","tasks","sortedData","year","fieldInfo","month","forEach","task","taskName","substring","i","tickKey","monthDayKey","hourKey","minuteKey","performedValue","monthDayValue","hourValue","minuteValue","minutesPresent","date","taskObj","TaskName","Performed","Date","Hour","Minutes","existingTask","find","item","push","sort","a","b","taskNameComparison","localeCompare","showSortedDataButton","ShowSortedData","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\project angular\\Student_Task_Tracker\\ClientApp\\src\\app\\VT_Section\\student-dashboard\\student-dashboard.component.html","D:\\project angular\\Student_Task_Tracker\\ClientApp\\src\\app\\VT_Section\\student-dashboard\\student-dashboard.component.ts"],"sourcesContent":["<div class=\"container\">\n  <!--1st row-->\n  <div class=\"row\">\n    <div class=\"col-6\"><app-nav-menu></app-nav-menu></div>\n    <div class=\"col-6\">\n      <div class=\"row\">\n        <div class=\"col\">\n          <div class=\"d-flex justify-content-end mt-3\">\n            <button (click)=\"go_to_login()\" class=\"btn btn-success\">Login</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!--2nd row-->\n  <div class=\"row\">\n    <div class=\"col-4 text-left\">\n      <h4> {{email}}</h4>\n    </div>\n    <div class=\"col-8 text-right\">\n      <table class=\"table mt-3\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Full Name</th>\n            <th scope=\"col\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let data of studentData\">\n            <td>{{data.fullname}}</td>\n            <td><button class=\"btn btn-info\" (click)=\"selectStudent(data.stud_Id)\">Select Student</button></td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n\n\n<!------show data of selected student (id) in table--------->\n<table class=\"table mt-3\" *ngIf=\"selectedStudent\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Full Name</th>\n      <th scope=\"col\">Email</th>\n      <th scope=\"col\">Mobile</th>\n      <th scope=\"col\">Academic Year</th>\n      <th>Actions</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>{{ selectedStudent.fullname }}</td>\n      <td>{{ selectedStudent.email }}</td>\n      <td>{{ selectedStudent.mobile }}</td>\n      <td>{{ selectedStudent.academicyear }}</td>\n      <td>\n        <input type=\"file\" #fileInput (change)=\"onFileSelected($event)\" style=\"display: none;\">\n        <button (click)=\"fileInput.click()\">Fill Daily Diary</button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<!--json data from daily diary scanned form-->\n<div class=\"container border border-warning\" *ngIf=\"showDailyDiarySection\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <h4 class=\"text-center\">{{studentDataFromJson.targetName}}</h4>\n      \n    </div>\n  </div>\n  <div class=\"row border-bottom\">\n    <h6>Name: {{studentDataFromJson.fieldInfo.name | titlecase}}</h6>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-1\">Student ID :</div>\n    <div class=\"col-2 border mt-1\" style=\"text-align: left;\">{{studentDataFromJson.fieldInfo.StudentID}}</div>\n    <div class=\"col-1\"></div>\n    <div class=\"col\"></div>\n    <div class=\"col-2\">Academic Year :</div>\n    <div class=\"col-2 border mt-1\">{{studentDataFromJson.fieldInfo.AcademicYear}}</div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-1\">Month :</div>\n    <div class=\"col-2 border mt-1\">{{studentDataFromJson.fieldInfo.Month}}</div>\n    <div class=\"col-1\">Year :</div>\n    <div class=\"col-2 border\">{{studentDataFromJson.fieldInfo.Year}}</div>\n    <div class=\"col-1\">Job Role :</div>\n    <div class=\"col-4 border mt-1\">{{studentDataFromJson.fieldInfo.JobRole}}</div>\n  </div>\n<br>\n  <table class=\"table table-bordered\">\n    <tr>\n      <td rowspan=\"3\">Task</td>\n      <td>Day Of Month</td>\n      <td *ngFor=\"let MonthDay of  MonthDaysData\">{{ studentDataFromJson?.fieldInfo[MonthDay]}}</td>\n    </tr>\n    <tr>\n      <td>Hours</td>\n      <td *ngFor=\"let hour of hoursData\">{{ studentDataFromJson?.fieldInfo[hour]}}</td>\n    </tr>\n    <tr>\n      <td>Minutes</td>\n      <td *ngFor=\"let minute of minutesData\">{{ studentDataFromJson?.fieldInfo[minute]}}</td>\n    </tr>\n    <tr>\n      <td colspan=\"2\">{{studentDataFromJson.fieldInfo.TaskName1}}</td>\n      <td *ngFor=\"let tick of Task1TickData\">{{studentDataFromJson?.fieldInfo[tick]}}</td>\n    </tr>\n    <tr>\n      <td colspan=\"2\">{{studentDataFromJson.fieldInfo.TaskName2}}</td>\n      <td *ngFor=\"let tick of Task1TickData\">{{studentDataFromJson?.fieldInfo[tick]}}</td>\n    </tr>\n    <tr>\n      <td colspan=\"2\">{{studentDataFromJson.fieldInfo.TaskName3}}</td>\n      <td *ngFor=\"let tick of Task1TickData\">{{studentDataFromJson?.fieldInfo[tick]}}</td>\n    </tr>\n  </table>\n</div>\n<hr>\n<button  *ngIf=\"showSortedDataButton\" (click)=\"toggleSortedDataVisibility()\">Show Sorted Data</button>\n \n<!-- {TaskName: 'Graphics', Performed: 'Yes', Date: '2023--1', Hour: '3', Minutes: '00'} -->\n<div *ngIf=\"ShowSortedData\">\n  <table>\n    <thead>\n      <tr>\n      <th>TaskName</th>\n      <th>Performed</th>\n      <th>Date</th>\n      <th>Minutes</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let task of sortedData\">\n        <td>{{ task.TaskName }}</td>\n        <td>{{ task.Performed }}</td>\n        <td>{{ task.Date }}</td>\n        <td>{{ task.Hour }}</td>\n        <td>{{ task.Minutes }}</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/shared/api.service';\nimport { AuthserviceService } from 'src/app/shared/authservice.service';\n\n@Component({\n  selector: 'app-student-dashboard',\n  templateUrl: './student-dashboard.component.html',\n  styleUrls: ['./student-dashboard.component.css']\n})\nexport class StudentDashboardComponent {\n  studentData !: any;\n  selectedStudent: any;\n  studentDataFromJson: any;\n  email!: string; //display emailid of vt to student dashboard\n  ShowSortedData:boolean | undefined;\n  showSortedDataButton :boolean = false;\n  showDailyDiarySection: boolean = false;\n  sortedData: TaskData[] = []; \n  MonthDaysData: string[]=['MonthDay1','MonthDay2','MonthDay3','MonthDay4','MonthDay5','MonthDay6','MonthDay7','MonthDay8','MonthDay9','MonthDay10','MonthDay11','MonthDay12','MonthDay13'];\n  hoursData: string[] = ['hour1', 'hour2', 'hour3', 'hour4', 'hour5', 'hour6', 'hour7', 'hour8', 'hour9', 'hour10', 'hour11', 'hour12', 'hour13'];\n  minutesData: string[] = ['minutes1','minutes2','minutes3','minutes4','minutes5','minutes6','minutes7','minutes8','minutes9','minutes10','minutes11','minutes12','minutes13'];\n  Task1TickData: string[] = ['Task1Tick1','Task1Tick2','Task1Tick3','Task1Tick4','Task1Tick5','Task1Tick6','Task1Tick7','Task1Tick8','Task1Tick9','Task1Tick10','Task1Tick11','Task1Tick12','Task1Tick13']\n\n\n  constructor(private apiservice: ApiService,\n    private router: Router,\n    private authservice : AuthserviceService) { }\n\n  ngOnInit(): void {\n    this.getAllStudents();\n    this.email = this.authservice.getEmail();//display emailid of vt to student dashboard\n    this.toggleSortedDataVisibility\n  }\n\n  getAllStudents() {\n    this.apiservice.getStudents().subscribe((res: any) => {\n\n      this.studentData = res.studentDetails;\n      console.log(res.studentDetails);\n    })\n  }\n  selectStudent(id: number) {\n    this.apiservice.getStudentById(id).subscribe((res) => {\n      this.selectedStudent = res.studentDetails;\n      //console.log(res.studentDetails);\n      console.log(this.selectedStudent);\n    })\n  }\n  clearSelectedStudent() {\n    this.selectedStudent = null;\n  }\n  go_to_login() {\n    this.router.navigate(['/vt_login'])\n  }\n\n  //select json file and upload\n  onFileSelected(event: any): void {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        //It checks if e and e.target are not null or undefined before attempting to access e.target. \n        //The result is cast to FileReader type, and then .result is accessed and cast as a string.\n        const fileContent = (e.target as FileReader)?.result as string;\n        this.parseJson(fileContent);\n         this.logFilteredData(); // Log the filtered data before sending to the backend\n        // this.uploadDataToBackend();\n        this.showDailyDiarySection = true; \n      };\n      reader.readAsText(file);\n    }\n  }\n  private parseJson(jsonString: string): void {\n    try {\n      const jsonData = JSON.parse(jsonString);\n      this.studentDataFromJson = jsonData;\n      console.log(\"stu_data from json\", this.studentDataFromJson);\n      // this.hoursData = Object.values(this.studentDataFromJson.fieldInfo.hour);\n    } catch (error) {\n      console.log(\"Error parsing JSON:\", error);\n    }\n  }\n\n  //here new obj for filtered data from scanned file to send to backend\n  private logFilteredData(): void {\n    if (this.studentDataFromJson) {\n      const tasks = ['Task1', 'Task2', 'Task3', 'Task4', 'Task5', 'Task6'];\n      const sortedData: TaskData[] = [];\n  \n      // Extract the 'Year' and 'Month' from the scanned file\n      const year = this.studentDataFromJson.fieldInfo['Year'];\n      const month = this.studentDataFromJson.fieldInfo['Month'];\n  \n      tasks.forEach((task) => {\n        const taskName = this.studentDataFromJson.fieldInfo[`TaskName${task.substring(4)}`];\n  \n        // Skip if TaskName is empty\n        if (!taskName) {\n          return;\n        }\n  \n        for (let i = 1; i <= 13; i++) {\n          const tickKey = `${task}Tick${i}`;\n          const monthDayKey = `MonthDay${i}`;\n          const hourKey = `hour${i}`;\n          const minuteKey = `minutes${i}`;\n  \n          const performedValue = this.studentDataFromJson.fieldInfo[tickKey] === '1' ? 'Yes' : 'No';\n  \n          // Only include tasks with tick value 1\n          if (performedValue === 'Yes') {\n            const monthDayValue = this.studentDataFromJson.fieldInfo[monthDayKey];\n            const hourValue = this.studentDataFromJson.fieldInfo[hourKey];\n            const minuteValue = this.studentDataFromJson.fieldInfo[minuteKey];\n  \n            const minutesPresent = minuteValue !== ''; // Check if minutes are present\n  \n            // Form the date string directly\n            const date = `${year}-${month}-${monthDayValue}`;\n  \n            const taskObj = {\n              TaskName: taskName,\n              Performed: performedValue,\n              Date: date,\n              Hour: hourValue,\n              Minutes: minutesPresent ? minuteValue : '00', // Include only if minutes are present\n            };\n  \n            // Check if the task is already in the sortedData array\n            const existingTask = sortedData.find((item) => item.TaskName === taskName && item.Date === date);\n  \n            if (!existingTask) {\n              sortedData.push(taskObj);\n            }\n          }\n        }\n      });\n  \n      // Sort the array based on TaskName, Date\n      sortedData.sort((a, b) => {\n        const taskNameComparison = a.TaskName.localeCompare(b.TaskName);\n        return taskNameComparison === 0 ? a.Date.localeCompare(b.Date) : taskNameComparison;\n      });\n  \n      console.log(\"sortedData =\", sortedData);\n      this.showSortedDataButton = true;\n    }\n  }\n  //show sorted data on button click\n  toggleSortedDataVisibility(){\n    this.ShowSortedData = !this.ShowSortedData;\n  }\n}\n\ninterface TaskData {\n  TaskName: string;\n  Performed: string;//Performed means TaskTick\n Date: string;\n  Hour: string;\n  Minutes?: string;\n  // ... other properties\n}\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}