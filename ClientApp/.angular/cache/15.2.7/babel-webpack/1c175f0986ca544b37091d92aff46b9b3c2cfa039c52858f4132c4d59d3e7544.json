{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { VTModel } from 'src/app/shared/Model/VTModel.model';\nlet VTLoginComponent = class VTLoginComponent {\n  constructor(fb, router, apiService) {\n    this.fb = fb;\n    this.router = router;\n    this.apiService = apiService;\n    this.isSubmitted = false;\n    this.loginObj = new VTModel();\n    this.loginForm = this.fb.group({\n      emailId: [\"\", [Validators.required, Validators.email]],\n      password: [\"\", Validators.required]\n    });\n  }\n  login() {\n    this.loginObj.EmailId = this.loginForm.value.emailId;\n    this.loginObj.Password = this.loginForm.value.password;\n    // this.apiService.login(this.loginObj)\n    // .subscribe(res =>{\n    //   alert(res.message);\n    // })\n    // // console.log(\"form values :\",this.loginForm.value);\n    // this.router.navigate(['/student_dashboard']);\n    this.apiService.login(this.loginObj).subscribe({\n      next: res => {\n        console.log(\"response =\", res);\n        if (res && res.statusCode === 200) {\n          this.router.navigate(['/student_dashboard']);\n          alert(res.message);\n        } else {\n          alert(res.message);\n        }\n      },\n      error: err => {\n        if (err.status === 404) {\n          alert(err.error.message || 'VT Not Found');\n        } else {\n          console.error(\"Login failed\", err);\n        }\n      }\n    });\n  }\n  f(name) {\n    return this.loginForm.get(name);\n  }\n};\nVTLoginComponent = __decorate([Component({\n  selector: 'app-vt-login',\n  templateUrl: './vt-login.component.html',\n  styleUrls: ['./vt-login.component.css']\n})], VTLoginComponent);\nexport { VTLoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAsBC,UAAU,QAAQ,gBAAgB;AAExD,SAASC,OAAO,QAAQ,oCAAoC;AAQrD,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAI3BC,YAAoBC,EAAc,EACxBC,MAAa,EACbC,UAAqB;IAFX,OAAE,GAAFF,EAAE;IACZ,WAAM,GAANC,MAAM;IACN,eAAU,GAAVC,UAAU;IALpB,gBAAW,GAAa,KAAK;IACtB,aAAQ,GAAG,IAAIL,OAAO,EAAE;IAM7B,cAAS,GAAG,IAAI,CAACG,EAAE,CAACG,KAAK,CAAC;MAC5BC,OAAO,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,EAACT,UAAU,CAACU,KAAK,CAAC,CAAE;MACtDC,QAAQ,EAAE,CAAC,EAAE,EAACX,UAAU,CAACS,QAAQ;KACjC,CAAC;EALgC;EAOjCG,KAAK;IACH,IAAI,CAACC,QAAQ,CAACC,OAAO,GAAI,IAAI,CAACC,SAAS,CAACC,KAAK,CAACR,OAAiB;IAC/D,IAAI,CAACK,QAAQ,CAACI,QAAQ,GAAG,IAAI,CAACF,SAAS,CAACC,KAAK,CAACL,QAAkB;IAChE;IACA;IACA;IACA;IACA;IACA;IACD,IAAI,CAACL,UAAU,CAACM,KAAK,CAAC,IAAI,CAACC,QAAQ,CAAC,CACnCK,SAAS,CAAC;MACVC,IAAI,EAACC,GAAG,IAAG;QACTC,OAAO,CAACC,GAAG,CAAC,YAAY,EAACF,GAAG,CAAC;QAC7B,IAAGA,GAAG,IAAIA,GAAG,CAACG,UAAU,KAAK,GAAG,EAAC;UAC/B,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC;UAC5CC,KAAK,CAACL,GAAG,CAACM,OAAO,CAAC;SACnB,MAAM;UACLD,KAAK,CAACL,GAAG,CAACM,OAAO,CAAC;;MAEtB,CAAC;MACDC,KAAK,EAACC,GAAG,IAAE;QACT,IAAGA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAC;UACpBJ,KAAK,CAACG,GAAG,CAACD,KAAK,CAACD,OAAO,IAAI,cAAc,CAAC;SAC3C,MACG;UACFL,OAAO,CAACM,KAAK,CAAC,cAAc,EAACC,GAAG,CAAC;;MAErC;KACA,CAAC;EACH;EAECE,CAAC,CAACC,IAAQ;IACT,OAAO,IAAI,CAAChB,SAAS,CAACiB,GAAG,CAACD,IAAI,CAAC;EACjC;CAED;AAhDY7B,gBAAgB,eAL5BH,SAAS,CAAC;EACTkC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACWjC,gBAAgB,CAgD5B;SAhDYA,gBAAgB","names":["Component","Validators","VTModel","VTLoginComponent","constructor","fb","router","apiService","group","emailId","required","email","password","login","loginObj","EmailId","loginForm","value","Password","subscribe","next","res","console","log","statusCode","navigate","alert","message","error","err","status","f","name","get","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\project angular\\Student_Task_Tracker\\ClientApp\\src\\app\\VT_Section\\vt-login\\vt-login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { VTModel } from 'src/app/shared/Model/VTModel.model';\nimport { ApiService } from 'src/app/shared/api.service';\n\n@Component({\n  selector: 'app-vt-login',\n  templateUrl: './vt-login.component.html',\n  styleUrls: ['./vt-login.component.css']\n})\nexport class VTLoginComponent {\n  isSubmitted : boolean = false;\n  public loginObj = new VTModel();\n\n  constructor(private fb:FormBuilder,\n    private router:Router,\n    private apiService:ApiService){}\n\n    loginForm = this.fb.group({\n  emailId :[\"\",([Validators.required,Validators.email])],\n  password :[\"\",Validators.required]\n });\n\n  login(){\n    this.loginObj.EmailId  = this.loginForm.value.emailId as string;\n    this.loginObj.Password = this.loginForm.value.password as string;\n    // this.apiService.login(this.loginObj)\n    // .subscribe(res =>{\n    //   alert(res.message);\n    // })\n    // // console.log(\"form values :\",this.loginForm.value);\n    // this.router.navigate(['/student_dashboard']);\n   this.apiService.login(this.loginObj)\n   .subscribe({\n    next:res =>{\n      console.log(\"response =\",res);\n      if(res && res.statusCode === 200){\n        this.router.navigate(['/student_dashboard']);\n        alert(res.message);\n      } else {\n        alert(res.message);\n      }\n    },\n    error:err=>{\n      if(err.status === 404){\n        alert(err.error.message || 'VT Not Found');\n      }\n      else{\n        console.error(\"Login failed\",err);\n      }\n    }\n   })\n  }\n\n   f(name:any){\n    return this.loginForm.get(name);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}